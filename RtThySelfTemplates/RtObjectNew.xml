<RtObject>
@helper WriteGroups( System.Collections.Generic.IEnumerable<dynamic> groups )
{
	@foreach ( var g in groups )
	{
		<group name="@g.name" description="@g.description" hidden="@{if (g.hidden) {<text>true</text>} else {<text>false</text>}}" @if(!String.IsNullOrEmpty(g.arrayValueName)) {<text>arrayValueName="</text>@g.arrayValueName<text>"</text> } @if(!String.IsNullOrEmpty(g.min) && g.min != "0") {<text>min="</text>@g.min<text>"</text>} @if(!String.IsNullOrEmpty(g.max) && g.max != "0") {<text>max="</text>@g.max<text>"</text> }  @if(!String.IsNullOrEmpty(g.key)) {<text>key="</text>@g.key<text>"</text> }>
		@foreach ( var i in g.item )
		{
			<item name="@i.name" displayName="@i.displayName" description="@i.description" defaultValue="@i.defaultValue.Replace( "@", "@@")" type="@i.type" hidden="@{if (i.hidden) {<text>true</text>} else {<text>false</text>}}" @if(!String.IsNullOrEmpty(i.min) && i.min != "0") {<text>min="</text>@i.min<text>"</text> } @if(!String.IsNullOrEmpty(i.max) && i.max != "0") {<text>max="</text>@i.max<text>"</text> }/>
		}
		@WriteGroups( g.group )
		</group>
	}
}

@WriteGroups( @Model.group )

@foreach ( var c in @Model.custom )
{
	<custom name="@(c.name)" classname="@c.classname" />
}

@foreach ( var e in @Model.enumeration )
{
	<enum name="@e.name" >
		@foreach ( var ev in e.value )
		{
			<value key="@ev.key" value="@ev.value" />
		}
	</enum>
}

</RtObject>
<!-- Generated by Artie on @DateTime.Now -->
